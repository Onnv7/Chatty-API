syntax = "proto3";

package user;


message ErrorResponse {
  string errorMessage = 1;
  int32 errorCode = 2; 
  optional string subErrorMessage = 3;
  optional int32 subErrorCode = 4; 
}
message Empty {}


service ProfileService {
    rpc CreateUserProfile(CreateUserProfileRequest) returns (CreateUserProfileResponse) {}
    rpc SearchProfile(SearchProfileRequest) returns (SearchProfileResponse) {}
    rpc GetProfileById(GetProfileByIdRequest) returns (GetProfileByIdResponse) {}
    rpc UpdateProfileById(UpdateProfileByIdRequest) returns (UpdateProfileByIdResponse) {}
}

service FriendService {
  rpc SendInvitation(SendInvitationRequest) returns (SendInvitationResponse) {}
  rpc ProcessInvitation(ProcessInvitationRequest) returns (ProcessInvitationResponse) {}
  rpc GetPendingInvitationList(GetPendingInvitationListRequest) returns (GetPendingInvitationListResponse) {}
  rpc SearchFriend(SearchFriendRequest) returns (SearchFriendResponse) {}
  rpc GetFriendProfile(GetFriendProfileRequest) returns (GetFriendProfileResponse) {}
}

message GetFriendProfileRequest {
  int32 friendId = 1;
}
message GetFriendProfileData {
  string fullName = 1;
  string avatarUrl = 2;
}
message GetFriendProfileResponse {
  optional GetFriendProfileData data = 1;
  optional ErrorResponse error = 2; 
  bool success = 3; 
}

message FriendCardData {
  int32 profileId = 1;
  string avatarUrl = 3;
  string fullName = 4;
  string gender = 5;
  string relationship = 6;
  optional int32 invitationId = 7;
}

message SearchFriendData {
  repeated FriendCardData friendList = 1;
  int32 totalPage = 2;
}

message SearchFriendResponse {
  optional SearchFriendData data = 1;
  optional ErrorResponse error = 2; 
  bool success = 3; 
}

message SearchFriendRequest {
  int32 userId = 1;
  string key = 2;
  int32 page = 3;
  int32 size = 4;
  optional string gender = 5;
}

message PendingInvitation {
  int32 invitationId = 1;
  int32 profileId = 2;
  string avatarUrl = 3;
  string fullName = 4;
  string gender = 5;
}
message GetPendingInvitationListData {
  repeated PendingInvitation invitationList = 1;
  int32 totalPage = 2;
}
message GetPendingInvitationListResponse {
  optional GetPendingInvitationListData data = 1;
  optional ErrorResponse error = 2; 
  bool success = 3; 
}

message GetPendingInvitationListRequest {
  int32 userId = 1;
  int32 page = 2;
  int32 size = 3;
  string actor = 4;
}

message ProcessInvitationRequest {
  int32 invitationId = 1;
  string action = 2;
}

message ProcessInvitationResponse {
  optional ErrorResponse error = 1; 
  bool success = 2; 
}

message SendInvitationResponse {
  optional ErrorResponse error = 1; 
  bool success = 2; 
}

message SendInvitationRequest {
  int32 senderId = 1;
  int32 receiverId = 2;

}

message UpdateProfileByIdRequest {
  int32 id = 1;
  string firstName = 2;
  string lastName = 3;
  string gender = 4;
  string birth_date = 5;
  string introduction = 6;
}

message UpdateProfileByIdResponse {
  optional ErrorResponse error = 1; 
  bool success = 2; 
}

message GetProfileByIdRequest {
  int32 id  = 1;
}

message GetProfileByIdData {
  string avatarUrl = 1;
  string email = 2;
  string firstName = 3;
  string lastName = 4;
  string gender = 5;
  string birthDate = 6;
  string activeStatus = 7;
  string lastActiveAt = 8;

}

message GetProfileByIdResponse {
  optional GetProfileByIdData data = 1;
  optional ErrorResponse error = 2; 
  bool success = 3; 
}

message SearchProfileRequest {
  string email = 1;
}

message SearchProfileData {
  int32 id = 1;
  string firstName = 2;
  string lastName = 3;
}

message SearchProfileResponse {
  optional SearchProfileData data = 1;
  optional ErrorResponse error = 2; 
  bool success = 3; 
}

message CreateUserProfileRequest {
    string email = 1;
    string firstName = 3;
    string lastName = 4;
    string gender = 5;
    string birthDate = 6;
    int32 accountId = 7;
}

message CreateUserProfileData {
  int32 profileId = 1;
}

message CreateUserProfileResponse {
  optional ErrorResponse error = 1; 
  optional CreateUserProfileData data = 2;
  bool success = 3; 
}